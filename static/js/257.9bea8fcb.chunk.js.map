{"version":3,"file":"static/js/257.9bea8fcb.chunk.js","mappings":"6SAEaA,EAAa,mCAAG,0FAEzB,yFAFyB,SAGNC,EAAAA,GAAAA,IAAA,UADnB,2FAFyB,cAGrBC,EAHqB,yBAIpBA,EAAOC,KAAKC,SAJQ,2CAAH,qDAObC,EAAY,mCAAG,WAAMC,GAAN,gFACpBC,EADoB,6CAC6BD,EAD7B,sDAELL,EAAAA,GAAAA,IAAA,UAAaM,IAFR,cAEpBL,EAFoB,yBAGnBA,GAHmB,2CAAH,sDAMZM,EAAgB,mCAAG,WAAMF,GAAN,gFACxBC,EADwB,6CACyBD,EADzB,6EAETL,EAAAA,GAAAA,IAAA,UAAaM,IAFJ,cAExBL,EAFwB,yBAIvBA,EAAOC,KAAKM,MAJW,2CAAH,sDAOhBC,EAAmB,mCAAG,WAAMJ,GAAN,gFAC3BC,EAD2B,6CACsBD,EADtB,oFAEZL,EAAAA,GAAAA,IAAA,UAAaM,IAFD,cAE3BL,EAF2B,yBAI1BA,EAAOC,KAAKC,SAJc,2CAAH,sDAOnBO,EAAU,mCAAG,WAAMC,GAAN,gFAClBL,EADkB,mGACqFK,GADrF,SAEHX,EAAAA,GAAAA,IAAA,UAAaM,IAFV,cAElBL,EAFkB,yBAGjBA,EAAOC,KAAKC,SAHK,2CAAH,qD,0JC1BVS,EAAOC,EAAAA,GAAAA,KAAH,gFAMJC,EAA+BD,EAAAA,GAAAA,QAAH,sHAM5BE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,yQAgBRI,EAAaJ,EAAAA,GAAAA,EAAH,wDAKVK,EAAUL,EAAAA,GAAAA,GAAH,mFAMPM,GAAUN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,uQ,SC2BpB,EAxDqB,WAAO,IAAD,UACzB,GAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQlB,GAAOmB,EAAAA,EAAAA,MAAPnB,GACFoB,GAAWC,EAAAA,EAAAA,MAQjB,GAPAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,YACRzB,EAAAA,EAAAA,IAAaC,GAAIyB,KAAKP,GACtBI,QAAQC,IAAI,IACb,GAAE,CAACvB,IAECiB,EAAL,CAIA,IAAMS,EAAYC,KAAKC,MAAwC,GAAlCC,OAAOZ,EAAMpB,KAAKiC,eACzCC,EAASd,EAAMpB,KAAKkC,OAAOC,KAAI,SAAAC,GAAK,OACxC,0BAAsBA,EAAMC,MAAjBD,EAAMjC,GADuB,IAGpCmC,EAAQ,8CAA0ClB,EAAMpB,KAAKuC,aAEnE,OACE,iCACE,UAAC1B,EAAD,CAAU2B,GAAE,oBAAEjB,EAASkB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAtC,WACE,SAAC,MAAD,KACA,uCAEF,UAAChC,EAAD,YACE,gBAAKiC,IAAKL,EAAUM,IAAI,GAAGC,MAAM,SACjC,gCACE,yBAAU,OAALzB,QAAK,IAALA,GAAA,UAAAA,EAAOpB,YAAP,eAAa8C,SAAb,OAAsB1B,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOpB,YAA7B,aAAsB,EAAaqC,SACxC,wCAAgBR,EAAhB,QACA,uCACA,8BAAIT,QAAJ,IAAIA,GAAJ,UAAIA,EAAOpB,YAAX,aAAI,EAAa+C,YACjB,qCACA,SAAChC,EAAD,UAAamB,WAGjB,UAACtB,EAAD,YACE,oDACA,UAACI,EAAD,YACE,yBACE,SAACC,EAAD,CAASuB,GAAG,OAAZ,qBAEF,yBACE,SAACvB,EAAD,CAASuB,GAAG,UAAZ,8BAIN,SAAC,EAAAQ,SAAD,WACE,SAAC,KAAD,QArCL,CAyCF,C","sources":["components/API.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const baseMoviesGet = async () => {\n  const BASE_URL =\n    'https://api.themoviedb.org/3/trending/all/day?api_key=40b1202aa7011d9f08f63b0e75c279f2';\n  const result = await axios.get(`${BASE_URL}`);\n  return result.data.results;\n};\n\nexport const getMovieById = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=40b1202aa7011d9f08f63b0e75c279f2`;\n  const result = await axios.get(`${BASE_URL}`);\n  return result;\n};\n\nexport const getCastByMovieId = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=40b1202aa7011d9f08f63b0e75c279f2&language=en-US`;\n  const result = await axios.get(`${BASE_URL}`);\n\n  return result.data.cast;\n};\n\nexport const getReviewsByMovieId = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=40b1202aa7011d9f08f63b0e75c279f2&language=en-US&page=1`;\n  const result = await axios.get(`${BASE_URL}`);\n\n  return result.data.results;\n};\n\nexport const findMovies = async querry => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=40b1202aa7011d9f08f63b0e75c279f2&query=${querry}`;\n  const result = await axios.get(`${BASE_URL}`);\n  return result.data.results;\n};\n","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n  display: flex;\n  align-items: center;\n  gap: 40px;\n`;\n\nexport const SectionAdditionalInformation = styled.section`\n  margin: 5px 0;\n  padding: 10px;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n`;\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  width: 75px;\n  margin: 5px;\n  padding: 5px;\n  align-items: center;\n  justify-content: center;\n  color: black;\n  text-decoration: none;\n\n  :hover {\n    background-color: #02818129;\n    border-radius: 10px;\n  }\n`;\n\nexport const GenresInfo = styled.p`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const AddList = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n`;\n\nexport const AddLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  padding: 5px 10px;\n\n  :hover {\n    background-color: #02818129;\n    border-radius: 10px;\n  }\n\n  &.active {\n    background-color: teal;\n    border-radius: 10px;\n    color: white;\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router';\nimport { getMovieById } from 'components/API';\nimport { useState, useEffect, Suspense } from 'react';\nimport { MdOutlineArrowBack } from 'react-icons/md';\nimport {\n  Main,\n  GenresInfo,\n  AddLink,\n  AddList,\n  BackLink,\n  SectionAdditionalInformation,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState('');\n  const { id } = useParams();\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    getMovieById(id).then(setMovie);\n    console.log('1');\n  }, [id]);\n\n  if (!movie) {\n    return;\n  }\n\n  const userScore = Math.trunc(Number(movie.data.vote_average) * 10);\n  const genres = movie.data.genres.map(genre => (\n    <span key={genre.id}>{genre.name}</span>\n  ));\n  const imageSrc = `https://image.tmdb.org/t/p/original/${movie.data.poster_path}`;\n\n  return (\n    <>\n      <BackLink to={location.state?.from ?? '/'}>\n        <MdOutlineArrowBack />\n        <span>Back</span>\n      </BackLink>\n      <Main>\n        <img src={imageSrc} alt=\"\" width=\"300\" />\n        <section>\n          <h1>{movie?.data?.title || movie?.data?.name}</h1>\n          <p>User Score: {userScore}%</p>\n          <h2>Overview:</h2>\n          <p>{movie?.data?.overview}</p>\n          <h3>Genres:</h3>\n          <GenresInfo>{genres}</GenresInfo>\n        </section>\n      </Main>\n      <SectionAdditionalInformation>\n        <h2>Additional information</h2>\n        <AddList>\n          <li>\n            <AddLink to=\"cast\">Cast</AddLink>\n          </li>\n          <li>\n            <AddLink to=\"reviews\">Reviews</AddLink>\n          </li>\n        </AddList>\n      </SectionAdditionalInformation>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["baseMoviesGet","axios","result","data","results","getMovieById","id","BASE_URL","getCastByMovieId","cast","getReviewsByMovieId","findMovies","querry","Main","styled","SectionAdditionalInformation","BackLink","Link","GenresInfo","AddList","AddLink","NavLink","useState","movie","setMovie","useParams","location","useLocation","console","log","useEffect","then","userScore","Math","trunc","Number","vote_average","genres","map","genre","name","imageSrc","poster_path","to","state","from","src","alt","width","title","overview","Suspense"],"sourceRoot":""}