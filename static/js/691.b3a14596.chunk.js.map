{"version":3,"file":"static/js/691.b3a14596.chunk.js","mappings":"6SAEaA,EAAa,mCAAG,0FAEzB,yFAFyB,SAGNC,EAAAA,GAAAA,IAAA,UADnB,2FAFyB,cAGrBC,EAHqB,yBAIpBA,EAAOC,KAAKC,SAJQ,2CAAH,qDAObC,EAAY,mCAAG,WAAMC,GAAN,gFACpBC,EADoB,6CAC6BD,EAD7B,sDAELL,EAAAA,GAAAA,IAAA,UAAaM,IAFR,cAEpBL,EAFoB,yBAGnBA,GAHmB,2CAAH,sDAMZM,EAAgB,mCAAG,WAAMF,GAAN,gFACxBC,EADwB,6CACyBD,EADzB,6EAETL,EAAAA,GAAAA,IAAA,UAAaM,IAFJ,cAExBL,EAFwB,yBAIvBA,EAAOC,KAAKM,MAJW,2CAAH,sDAOhBC,EAAmB,mCAAG,WAAMJ,GAAN,gFAC3BC,EAD2B,6CACsBD,EADtB,oFAEZL,EAAAA,GAAAA,IAAA,UAAaM,IAFD,cAE3BL,EAF2B,yBAI1BA,EAAOC,KAAKC,SAJc,2CAAH,sDAOnBO,EAAU,mCAAG,WAAMC,GAAN,gFAClBL,EADkB,mGACqFK,GADrF,SAEHX,EAAAA,GAAAA,IAAA,UAAaM,IAFV,cAElBL,EAFkB,yBAGjBA,EAAOC,KAAKC,SAHK,2CAAH,qD,4IC1BVS,EAAOC,EAAAA,GAAAA,KAAH,yEAMJC,EAAaD,EAAAA,GAAAA,GAAH,kFAMVE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wG,mCCyCtB,EAlDe,WAAO,IAAD,EACnB,GAAoCI,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCL,EAAAA,EAAAA,UAAS,IAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KACMC,EAAM,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GACtCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,IAILN,EAAcM,IACdf,EAAAA,EAAAA,IAAWe,GAAQK,KAAKN,GAGzB,GAAE,IAEH,IAKMO,EAAI,mCAAG,WAAMC,GAAN,wEACXA,EAAEC,iBACFX,EAAgB,CAAEY,MAAOhB,IAFd,KAGXM,EAHW,UAGQd,EAAAA,EAAAA,IAAWQ,GAHnB,kCAIXiB,QAAQC,IAAItB,GAJD,2CAAH,sDAOV,OACE,iCACE,UAACF,EAAD,CAAMyB,SAAUN,EAAhB,WACE,kBAAOO,KAAK,OAAOC,MAAOrB,EAAYsB,SAfzB,SAAAR,GACjBG,QAAQC,IAAIlB,GACZC,EAAca,EAAES,OAAOF,MACxB,KAaK,mBAAQD,KAAK,SAAb,wBAGF,UAACxB,EAAD,WACGS,EAAUmB,KAAI,SAAAC,GAAI,OACjB,yBACE,SAAC5B,EAAD,CAAW6B,GAAE,kBAAaD,EAAKtC,IAAMwC,MAAO,CAAEC,KAAMnB,GAApD,SACGgB,EAAKI,SAFDJ,EAAKtC,GADG,IAMf,SAIX,C","sources":["components/API.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const baseMoviesGet = async () => {\n  const BASE_URL =\n    'https://api.themoviedb.org/3/trending/all/day?api_key=40b1202aa7011d9f08f63b0e75c279f2';\n  const result = await axios.get(`${BASE_URL}`);\n  return result.data.results;\n};\n\nexport const getMovieById = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=40b1202aa7011d9f08f63b0e75c279f2`;\n  const result = await axios.get(`${BASE_URL}`);\n  return result;\n};\n\nexport const getCastByMovieId = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=40b1202aa7011d9f08f63b0e75c279f2&language=en-US`;\n  const result = await axios.get(`${BASE_URL}`);\n\n  return result.data.cast;\n};\n\nexport const getReviewsByMovieId = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=40b1202aa7011d9f08f63b0e75c279f2&language=en-US&page=1`;\n  const result = await axios.get(`${BASE_URL}`);\n\n  return result.data.results;\n};\n\nexport const findMovies = async querry => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=40b1202aa7011d9f08f63b0e75c279f2&query=${querry}`;\n  const result = await axios.get(`${BASE_URL}`);\n  return result.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Form = styled.form`\n  margin: 20px;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n\n  :hover {\n    color: teal;\n  }\n`;\n","import { Form, MoviesList, MovieLink } from './Movies.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { findMovies } from 'components/API';\nimport { useLocation } from 'react-router';\n\nconst Movies = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieList, setMovieList] = useState([]);\n  const params = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!params) {\n      return;\n    }\n\n    setInputValue(params);\n    findMovies(params).then(setMovieList);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const InputValue = e => {\n    console.log(inputValue);\n    setInputValue(e.target.value);\n  };\n\n  const find = async e => {\n    e.preventDefault();\n    setSearchParams({ query: inputValue });\n    setMovieList(await findMovies(inputValue));\n    console.log(MoviesList);\n  };\n\n  return (\n    <>\n      <Form onSubmit={find}>\n        <input type=\"text\" value={inputValue} onChange={InputValue} />\n        <button type=\"submit\">Search</button>\n      </Form>\n\n      <MoviesList>\n        {movieList.map(item => (\n          <li key={item.id}>\n            <MovieLink to={`/movies/${item.id}`} state={{ from: location }}>\n              {item.title}\n            </MovieLink>\n          </li>\n        ))}{' '}\n      </MoviesList>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["baseMoviesGet","axios","result","data","results","getMovieById","id","BASE_URL","getCastByMovieId","cast","getReviewsByMovieId","findMovies","querry","Form","styled","MoviesList","MovieLink","Link","useState","inputValue","setInputValue","useSearchParams","searchParams","setSearchParams","movieList","setMovieList","params","get","location","useLocation","useEffect","then","find","e","preventDefault","query","console","log","onSubmit","type","value","onChange","target","map","item","to","state","from","title"],"sourceRoot":""}