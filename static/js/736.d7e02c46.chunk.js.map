{"version":3,"file":"static/js/736.d7e02c46.chunk.js","mappings":"6SAEaA,EAAa,mCAAG,0FAEzB,yFAFyB,SAGNC,EAAAA,GAAAA,IAAA,UADnB,2FAFyB,cAGrBC,EAHqB,yBAIpBA,EAAOC,KAAKC,SAJQ,2CAAH,qDAObC,EAAY,mCAAG,WAAMC,GAAN,gFACpBC,EADoB,6CAC6BD,EAD7B,sDAELL,EAAAA,GAAAA,IAAA,UAAaM,IAFR,cAEpBL,EAFoB,yBAGnBA,GAHmB,2CAAH,sDAMZM,EAAgB,mCAAG,WAAMF,GAAN,gFACxBC,EADwB,6CACyBD,EADzB,6EAETL,EAAAA,GAAAA,IAAA,UAAaM,IAFJ,cAExBL,EAFwB,yBAIvBA,EAAOC,KAAKM,MAJW,2CAAH,sDAOhBC,EAAmB,mCAAG,WAAMJ,GAAN,gFAC3BC,EAD2B,6CACsBD,EADtB,oFAEZL,EAAAA,GAAAA,IAAA,UAAaM,IAFD,cAE3BL,EAF2B,yBAI1BA,EAAOC,KAAKC,SAJc,2CAAH,sDAOnBO,EAAU,mCAAG,WAAMC,GAAN,gFAClBL,EADkB,mGACqFK,GADrF,SAEHX,EAAAA,GAAAA,IAAA,UAAaM,IAFV,cAElBL,EAFkB,yBAGjBA,EAAOC,KAAKC,SAHK,2CAAH,qD,gIC3BVS,EAAWC,EAAAA,GAAAA,GAAH,kIAQRC,EAAWD,EAAAA,GAAAA,GAAH,sL,SCyBrB,EA9Ba,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACQX,GAAOY,EAAAA,EAAAA,MAAPZ,GAMR,IAJAa,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAiBF,GAAIc,KAAKH,EAC3B,GAAE,CAACX,IAECG,EAIL,OACE,SAACI,EAAD,UACGJ,EAAKY,KAAI,SAAAC,GACR,IAAMC,EAASD,EAAOE,aAAP,8CAC4BF,EAAOE,cAC9C,8KACJ,OACE,UAACT,EAAD,YACE,gBAAKU,IAAKF,EAAQG,IAAI,GAAGC,MAAM,QAAQC,OAAO,WAC9C,kCAAUN,EAAOO,SACjB,uCAAeP,EAAOQ,eAHTR,EAAOhB,GAMzB,KAGN,C","sources":["components/API.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const baseMoviesGet = async () => {\n  const BASE_URL =\n    'https://api.themoviedb.org/3/trending/all/day?api_key=40b1202aa7011d9f08f63b0e75c279f2';\n  const result = await axios.get(`${BASE_URL}`);\n  return result.data.results;\n};\n\nexport const getMovieById = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=40b1202aa7011d9f08f63b0e75c279f2`;\n  const result = await axios.get(`${BASE_URL}`);\n  return result;\n};\n\nexport const getCastByMovieId = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=40b1202aa7011d9f08f63b0e75c279f2&language=en-US`;\n  const result = await axios.get(`${BASE_URL}`);\n\n  return result.data.cast;\n};\n\nexport const getReviewsByMovieId = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=40b1202aa7011d9f08f63b0e75c279f2&language=en-US&page=1`;\n  const result = await axios.get(`${BASE_URL}`);\n\n  return result.data.results;\n};\n\nexport const findMovies = async querry => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=40b1202aa7011d9f08f63b0e75c279f2&query=${querry}`;\n  const result = await axios.get(`${BASE_URL}`);\n  return result.data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type: none;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const CastItem = styled.li`\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n`;\n","import { getCastByMovieId } from '../API';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { CastList, CastItem } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState('');\n  const { id } = useParams();\n\n  useEffect(() => {\n    getCastByMovieId(id).then(setCast);\n  }, [id]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <CastList>\n      {cast.map(person => {\n        const imgSrc = person.profile_path\n          ? `https://image.tmdb.org/t/p/original/${person.profile_path}`\n          : 'https://media.istockphoto.com/id/1162198273/vector/question-mark-icon-flat-vector-illustration-design.jpg?s=612x612&w=0&k=20&c=MJbd8bw2iewJRd8sEkHxyGMgY3__j9MKA8cXvIvLT9E=';\n        return (\n          <CastItem key={person.id}>\n            <img src={imgSrc} alt=\"\" width=\"150px\" height=\"225px\" />\n            <p>Name: {person.name}</p>\n            <p>Character: {person.character}</p>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["baseMoviesGet","axios","result","data","results","getMovieById","id","BASE_URL","getCastByMovieId","cast","getReviewsByMovieId","findMovies","querry","CastList","styled","CastItem","useState","setCast","useParams","useEffect","then","map","person","imgSrc","profile_path","src","alt","width","height","name","character"],"sourceRoot":""}