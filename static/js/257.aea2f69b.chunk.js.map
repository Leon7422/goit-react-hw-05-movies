{"version":3,"file":"static/js/257.aea2f69b.chunk.js","mappings":"6SAEaA,EAAa,mCAAG,0FAEzB,yFAFyB,SAGNC,EAAAA,GAAAA,IAAA,UADnB,2FAFyB,cAGrBC,EAHqB,yBAIpBA,EAAOC,KAAKC,SAJQ,2CAAH,qDAObC,EAAY,mCAAG,WAAMC,GAAN,gFACpBC,EADoB,6CAC6BD,EAD7B,sDAELL,EAAAA,GAAAA,IAAA,UAAaM,IAFR,cAEpBL,EAFoB,yBAGnBA,GAHmB,2CAAH,sDAMZM,EAAgB,mCAAG,WAAMF,GAAN,gFACxBC,EADwB,6CACyBD,EADzB,6EAETL,EAAAA,GAAAA,IAAA,UAAaM,IAFJ,cAExBL,EAFwB,yBAIvBA,EAAOC,KAAKM,MAJW,2CAAH,sDAOhBC,EAAmB,mCAAG,WAAMJ,GAAN,gFAC3BC,EAD2B,6CACsBD,EADtB,oFAEZL,EAAAA,GAAAA,IAAA,UAAaM,IAFD,cAE3BL,EAF2B,yBAI1BA,EAAOC,KAAKC,SAJc,2CAAH,sDAOnBO,EAAU,mCAAG,WAAMC,GAAN,gFAClBL,EADkB,mGACqFK,GADrF,SAEHX,EAAAA,GAAAA,IAAA,UAAaM,IAFV,cAElBL,EAFkB,yBAGjBA,EAAOC,KAAKC,SAHK,2CAAH,qD,4JC1BVS,EAAOC,EAAAA,GAAAA,KAAH,gFAMJC,EAAeD,EAAAA,GAAAA,IAAH,2DAKZE,EAA+BF,EAAAA,GAAAA,QAAH,sHAM5BG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yQAgBRK,EAAaL,EAAAA,GAAAA,EAAH,wDAKVM,EAAUN,EAAAA,GAAAA,GAAH,mFAMPO,GAAUP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,uQ,SCmCpB,EApEqB,WAAO,IAAD,IACzB,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQrB,GAAOsB,EAAAA,EAAAA,MAAPtB,GACFuB,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACR1B,EAAAA,EAAAA,IAAaC,GACV0B,MAAK,SAAAC,GAAG,OAAIR,EAASQ,EAAI9B,KAAjB,IACR+B,OAAM,SAAAR,GAAK,OAAIC,EAASD,EAAMS,QAAnB,GACf,GAAE,CAAC7B,IAMJ,OACE,gCACGkB,IACC,iCACE,UAACP,EAAD,CAAUmB,GAAE,oBAAEP,EAASQ,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAtC,WACE,SAAC,MAAD,KACA,uCAEF,UAACzB,EAAD,YACE,gBACE0B,IAAG,8CAAyCf,EAAMgB,aAClDC,IAAI,GACJC,MAAM,SAER,gCACE,wBAAKlB,EAAMmB,OAASnB,EAAMoB,QAC1B,wCAnBHC,KAAKC,MAAmC,GAA7BC,OAAOvB,EAAMwB,eAmBrB,QACA,uCACA,uBAAIxB,EAAMyB,YACV,qCACA,SAAC9B,EAAD,UACGK,EAAM0B,OAAOC,KAAI,SAAAC,GAAK,OACrB,0BAAsBA,EAAMR,MAAjBQ,EAAM9C,GADI,aAM7B,UAACU,EAAD,YACE,oDACA,UAACI,EAAD,YACE,yBACE,SAACC,EAAD,CAASe,GAAG,OAAZ,qBAEF,yBACE,SAACf,EAAD,CAASe,GAAG,UAAZ,8BAIN,SAAC,EAAAiB,SAAD,WACE,SAAC,KAAD,SAIL3B,IAAUF,IACT,SAACT,EAAD,8EAMP,C","sources":["components/API.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const baseMoviesGet = async () => {\n  const BASE_URL =\n    'https://api.themoviedb.org/3/trending/all/day?api_key=40b1202aa7011d9f08f63b0e75c279f2';\n  const result = await axios.get(`${BASE_URL}`);\n  return result.data.results;\n};\n\nexport const getMovieById = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=40b1202aa7011d9f08f63b0e75c279f2`;\n  const result = await axios.get(`${BASE_URL}`);\n  return result;\n};\n\nexport const getCastByMovieId = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=40b1202aa7011d9f08f63b0e75c279f2&language=en-US`;\n  const result = await axios.get(`${BASE_URL}`);\n\n  return result.data.cast;\n};\n\nexport const getReviewsByMovieId = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=40b1202aa7011d9f08f63b0e75c279f2&language=en-US&page=1`;\n  const result = await axios.get(`${BASE_URL}`);\n\n  return result.data.results;\n};\n\nexport const findMovies = async querry => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=40b1202aa7011d9f08f63b0e75c279f2&query=${querry}`;\n  const result = await axios.get(`${BASE_URL}`);\n  return result.data.results;\n};\n","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n  display: flex;\n  align-items: center;\n  gap: 40px;\n`;\n\nexport const ErrorMessage = styled.div`\n  display: flex;\n  margin: 20px;\n`;\n\nexport const SectionAdditionalInformation = styled.section`\n  margin: 5px 0;\n  padding: 10px;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n`;\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  width: 75px;\n  margin: 5px;\n  padding: 5px;\n  align-items: center;\n  justify-content: center;\n  color: black;\n  text-decoration: none;\n\n  :hover {\n    background-color: #02818129;\n    border-radius: 10px;\n  }\n`;\n\nexport const GenresInfo = styled.p`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const AddList = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n`;\n\nexport const AddLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  padding: 5px 10px;\n\n  :hover {\n    background-color: #02818129;\n    border-radius: 10px;\n  }\n\n  &.active {\n    background-color: teal;\n    border-radius: 10px;\n    color: white;\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router';\nimport { getMovieById } from 'components/API';\nimport { useState, useEffect, Suspense } from 'react';\nimport { MdOutlineArrowBack } from 'react-icons/md';\nimport {\n  Main,\n  GenresInfo,\n  AddLink,\n  AddList,\n  BackLink,\n  SectionAdditionalInformation,\n  ErrorMessage,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieById(id)\n      .then(res => setMovie(res.data))\n      .catch(error => setError(error.message));\n  }, [id]);\n\n  const feedback = () => {\n    return Math.trunc(Number(movie.vote_average) * 10);\n  };\n\n  return (\n    <>\n      {movie && (\n        <>\n          <BackLink to={location.state?.from ?? '/'}>\n            <MdOutlineArrowBack />\n            <span>Back</span>\n          </BackLink>\n          <Main>\n            <img\n              src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n              alt=\"\"\n              width=\"300\"\n            />\n            <section>\n              <h1>{movie.title || movie.name}</h1>\n              <p>User Score: {feedback()}%</p>\n              <h2>Overview:</h2>\n              <p>{movie.overview}</p>\n              <h3>Genres:</h3>\n              <GenresInfo>\n                {movie.genres.map(genre => (\n                  <span key={genre.id}>{genre.name}</span>\n                ))}\n              </GenresInfo>\n            </section>\n          </Main>\n          <SectionAdditionalInformation>\n            <h2>Additional information</h2>\n            <AddList>\n              <li>\n                <AddLink to=\"cast\">Cast</AddLink>\n              </li>\n              <li>\n                <AddLink to=\"reviews\">Reviews</AddLink>\n              </li>\n            </AddList>\n          </SectionAdditionalInformation>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n      {error && !movie && (\n        <ErrorMessage>\n          Sorry, this page is not avaliable yet. Please try again later\n        </ErrorMessage>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["baseMoviesGet","axios","result","data","results","getMovieById","id","BASE_URL","getCastByMovieId","cast","getReviewsByMovieId","findMovies","querry","Main","styled","ErrorMessage","SectionAdditionalInformation","BackLink","Link","GenresInfo","AddList","AddLink","NavLink","useState","movie","setMovie","error","setError","useParams","location","useLocation","useEffect","then","res","catch","message","to","state","from","src","poster_path","alt","width","title","name","Math","trunc","Number","vote_average","overview","genres","map","genre","Suspense"],"sourceRoot":""}